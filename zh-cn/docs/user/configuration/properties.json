{
  "filename": "properties.md",
  "__html": "<h1>属性配置</h1>\n<p>如果你的应用足够简单，例如，不需要多注册中心或多协议，并且需要在spring容器中共享配置，那么，我们可以直接使用 <code>dubbo.properties</code>作为默认配置。</p>\n<p>Dubbo可以自动加载classpath根目录下的dubbo.properties，但是你同样可以使用JVM参数来指定路径：<code>-Ddubbo.properties.file=xxx.properties</code>。</p>\n<h1>映射规则</h1>\n<p>可以将xml的tag名和属性名组合起来，用‘.’分隔。每行一个属性。</p>\n<ul>\n<li><code>dubbo.application.name=foo</code> 相当于 <code>&lt;dubbo:application name=&quot;foo&quot; /&gt;</code></li>\n<li><code>dubbo.registry.address=10.20.153.10:9090</code> 相当于 <code>&lt;dubbo:registry address=&quot;10.20.153.10:9090&quot; /&gt;</code></li>\n</ul>\n<p>如果在xml配置中有超过一个的tag，那么你可以使用‘id’进行区分。如果你不指定id，它将作用于所有tag。</p>\n<ul>\n<li><code>dubbo.protocol.rmi.port=1099</code> 相当于 <code>&lt;dubbo:protocol id=&quot;rmi&quot; name=&quot;rmi&quot; port=&quot;1099&quot; /&gt;</code></li>\n<li><code>dubbo.registry.china.address=10.20.153.10:9090</code> 相当于 <code>&lt;dubbo:registry id=&quot;china&quot; address=&quot;10.20.153.10:9090&quot; /&gt;</code></li>\n</ul>\n<p>如下，是一个典型的dubbo.properties配置样例。</p>\n<pre><code class=\"language-properties\"><span class=\"hljs-meta\">dubbo.application.name</span>=<span class=\"hljs-string\">foo</span>\n<span class=\"hljs-meta\">dubbo.application.owner</span>=<span class=\"hljs-string\">bar</span>\n<span class=\"hljs-meta\">dubbo.registry.address</span>=<span class=\"hljs-string\">10.20.153.10:9090</span>\n</code></pre>\n<h2>重写与优先级</h2>\n<p><img src=\"../sources/images/dubbo-properties-override.jpg\" alt=\"properties-override\"></p>\n<p>优先级从高到低：</p>\n<ul>\n<li>JVM -D参数，当你部署或者启动应用时，它可以轻易地重写配置，比如，改变dubbo协议端口；</li>\n<li>XML, XML中的当前配置会重写dubbo.properties中的；</li>\n<li>Properties，默认配置，仅仅作用于以上两者没有配置时。</li>\n</ul>\n<p>1：如果在classpath下有超过一个dubbo.properties文件，比如，两个jar包都各自包含了dubbo.properties，dubbo将随机选择一个加载，并且打印错误日志。</p>\n<p>2：如果 <code>id</code>没有在<code>protocol</code>中配置，将使用<code>name</code>作为默认属性。</p>\n",
  "link": "/zh-cn/docs/user/configuration/properties.html",
  "meta": {}
}