{
  "filename": "parameter-validation.md",
  "__html": "<h1>Parameter Validation</h1>\n<p>The parameter validation <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup> is based on [JSR303] (<a href=\"https://jcp.org/en/jsr/detail?id=303\">https://jcp.org/en/jsr/detail?id=303</a>). The user simply add the validation annotation of the JSR303 and declares the filter for validation <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>.</p>\n<h2>Maven Dependency</h2>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>javax.validation<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>validation-api<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>1.0.0.GA<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>org.hibernate<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>hibernate-validator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>4.2.0.Final<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<h2>Sample</h2>\n<h3>Example of Parameter Annotation</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> java.io.Serializable;\n<span class=\"hljs-keyword\">import</span> java.util.Date;\n \n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Future;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Max;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Min;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.NotNull;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Past;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Pattern;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.Size;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ValidationParameter</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">Serializable</span> </span>{\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> <span class=\"hljs-keyword\">long</span> serialVersionUID = <span class=\"hljs-number\">7158911668568000392L</span>;\n \n    <span class=\"hljs-meta\">@NotNull</span> <span class=\"hljs-comment\">// Required </span>\n    <span class=\"hljs-meta\">@Size</span>(min = <span class=\"hljs-number\">1</span>, max = <span class=\"hljs-number\">20</span>) <span class=\"hljs-comment\">// range</span>\n    <span class=\"hljs-keyword\">private</span> String name;\n \n    <span class=\"hljs-meta\">@NotNull</span>(groups = ValidationService.Save<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>) // <span class=\"hljs-title\">It</span> <span class=\"hljs-title\">is</span> <span class=\"hljs-title\">not</span> <span class=\"hljs-title\">allowed</span> <span class=\"hljs-title\">to</span> <span class=\"hljs-title\">be</span> <span class=\"hljs-title\">blank</span> <span class=\"hljs-title\">when</span> <span class=\"hljs-title\">saving</span>. <span class=\"hljs-title\">When</span> <span class=\"hljs-title\">it</span> <span class=\"hljs-title\">is</span> <span class=\"hljs-title\">updated</span>, <span class=\"hljs-title\">it</span> <span class=\"hljs-title\">is</span> <span class=\"hljs-title\">allowed</span> <span class=\"hljs-title\">to</span> <span class=\"hljs-title\">be</span> <span class=\"hljs-title\">blank</span>, <span class=\"hljs-title\">indicating</span> <span class=\"hljs-title\">that</span> <span class=\"hljs-title\">the</span> <span class=\"hljs-title\">field</span> <span class=\"hljs-title\">is</span> <span class=\"hljs-title\">not</span> <span class=\"hljs-title\">updated</span> \n    @<span class=\"hljs-title\">Pattern</span>(<span class=\"hljs-title\">regexp</span> </span>= <span class=\"hljs-string\">\"^\\\\s*\\\\w+(?:\\\\.{0,1}[\\\\w-]+)*@[a-zA-Z0-9]+(?:[-.][a-zA-Z0-9]+)*\\\\.[a-zA-Z]+\\\\s*$\"</span>)\n    <span class=\"hljs-keyword\">private</span> String email;\n \n    <span class=\"hljs-meta\">@Min</span>(<span class=\"hljs-number\">18</span>) <span class=\"hljs-comment\">// min value</span>\n    <span class=\"hljs-meta\">@Max</span>(<span class=\"hljs-number\">100</span>) <span class=\"hljs-comment\">// max value</span>\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">int</span> age;\n \n    <span class=\"hljs-meta\">@Past</span> <span class=\"hljs-comment\">// Must be a past time</span>\n    <span class=\"hljs-keyword\">private</span> Date loginDate;\n \n    <span class=\"hljs-meta\">@Future</span> <span class=\"hljs-comment\">// Must be a future time</span>\n    <span class=\"hljs-keyword\">private</span> Date expiryDate;\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">getName</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> name;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setName</span><span class=\"hljs-params\">(String name)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.name = name;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> String <span class=\"hljs-title\">getEmail</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> email;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setEmail</span><span class=\"hljs-params\">(String email)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.email = email;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">int</span> <span class=\"hljs-title\">getAge</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> age;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setAge</span><span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> age)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.age = age;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Date <span class=\"hljs-title\">getLoginDate</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> loginDate;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setLoginDate</span><span class=\"hljs-params\">(Date loginDate)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.loginDate = loginDate;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Date <span class=\"hljs-title\">getExpiryDate</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> expiryDate;\n    }\n \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">setExpiryDate</span><span class=\"hljs-params\">(Date expiryDate)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.expiryDate = expiryDate;\n    }\n}\n</code></pre>\n<h3>Example of group validation</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ValidationService</span> </span>{ <span class=\"hljs-comment\">// By default, service interfaces are used to differentiate authentication scenarios. For example：@NotNull(groups = ValidationService.class)   </span>\n    <span class=\"hljs-meta\">@interface</span> Save{} <span class=\"hljs-comment\">// The same name as the method interface, the first letter capitalized, used to distinguish between authentication scene. For example：@NotNull(groups = ValidationService.Save.class)，option</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(ValidationParameter parameter)</span></span>;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">update</span><span class=\"hljs-params\">(ValidationParameter parameter)</span></span>;\n}\n</code></pre>\n<h3>Example of Cascading Validation</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> javax.validation.GroupSequence;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ValidationService</span> </span>{   \n    <span class=\"hljs-meta\">@GroupSequence</span>(Update<span class=\"hljs-class\">.<span class=\"hljs-keyword\">class</span>) // <span class=\"hljs-title\">validate</span> <span class=\"hljs-title\">the</span> <span class=\"hljs-title\">Update</span> <span class=\"hljs-title\">group</span> <span class=\"hljs-title\">rules</span> <span class=\"hljs-title\">at</span> <span class=\"hljs-title\">the</span> <span class=\"hljs-title\">same</span> <span class=\"hljs-title\">time</span>\n    @<span class=\"hljs-title\">interface</span> <span class=\"hljs-title\">Save</span></span>{}\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(ValidationParameter parameter)</span></span>;\n \n    <span class=\"hljs-meta\">@interface</span> Update{} \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">update</span><span class=\"hljs-params\">(ValidationParameter parameter)</span></span>;\n}\n</code></pre>\n<h3>Example of parameter validation</h3>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">import</span> javax.validation.constraints.Min;\n<span class=\"hljs-keyword\">import</span> javax.validation.constraints.NotNull;\n \n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">ValidationService</span> </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">save</span><span class=\"hljs-params\">(@NotNull ValidationParameter parameter)</span></span>; <span class=\"hljs-comment\">// Param must not be null</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">delete</span><span class=\"hljs-params\">(@Min(<span class=\"hljs-number\">1</span>)</span> <span class=\"hljs-keyword\">int</span> id)</span>; <span class=\"hljs-comment\">// validate the range</span>\n}\n</code></pre>\n<h2>Configuration</h2>\n<h3>Validate Parameter on the client</h3>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:reference</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"validationService\"</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"org.apache.dubbo.examples.validation.api.ValidationService\"</span> <span class=\"hljs-attr\">validation</span>=<span class=\"hljs-string\">\"true\"</span> /&gt;</span>\n</code></pre>\n<h3>Validate Parameter on the server</h3>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dubbo:service</span> <span class=\"hljs-attr\">interface</span>=<span class=\"hljs-string\">\"org.apache.dubbo.examples.validation.api.ValidationService\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"validationService\"</span> <span class=\"hljs-attr\">validation</span>=<span class=\"hljs-string\">\"true\"</span> /&gt;</span>\n</code></pre>\n<h2>Validate Exception</h2>\n<pre><code class=\"language-java\">import javax.validation.ConstraintViolationException;\nimport javax.validation.ConstraintViolationException;\n \nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n \nimport org.apache.dubbo.examples.validation.api.ValidationParameter;\nimport org.apache.dubbo.examples.validation.api.ValidationService;\nimport org.apache.dubbo.rpc.RpcException;\n \npublic class ValidationConsumer {   \n    public static void main(String[] args) throws Exception {\n        String config = ValidationConsumer.class.getPackage().getName().replace('.', '/') + \"/validation-consumer.xml\";\n        ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(config);\n        context.start();\n        ValidationService validationService = (ValidationService)context.getBean(\"validationService\");\n        // Error\n        try {\n            parameter = new ValidationParameter();\n            validationService.save(parameter);\n            System.out.println(\"Validation ERROR\");\n        } catch (RpcException e) { // throw RpcException\n            ConstraintViolationException ve = (ConstraintViolationException) e.getCause(); // Inside a ConstraintViolationException\n            Set&lt;ConstraintViolation&lt;?&gt;&gt; violations = ve.getConstraintViolations(); // You can get the collection of validation error details\n            System.out.println(violations);\n        }\n    } \n}\n</code></pre>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>Support since <code>2.1.0</code> version. If you want to know how to use it, refer to  [Sample code in dubbo project] (<a href=\"https://github.com/apache/dubbo-samples/tree/master/dubbo-samples-validation\">https://github.com/apache/dubbo-samples/tree/master/dubbo-samples-validation</a>) <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>The validation method is extensible, refer to <a href=\"http://dubbo.apache.org/zh-cn/docs/dev/impls/validation.html\">Developer Extension</a> in the developer's manual. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n",
  "link": "/en-us/docs/user/demos/parameter-validation.html",
  "meta": {}
}